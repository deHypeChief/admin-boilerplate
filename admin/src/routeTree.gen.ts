/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/_admin'
import { Route as IndexImport } from './routes/index'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgotPassword'
import { Route as AuthCreateAdminImport } from './routes/_auth/createAdmin'
import { Route as AdminDashboardImport } from './routes/_admin/dashboard'

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  path: '/forgotPassword',
  getParentRoute: () => rootRoute,
} as any)

const AuthCreateAdminRoute = AuthCreateAdminImport.update({
  path: '/createAdmin',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_admin/dashboard': {
      id: '/_admin/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof AdminImport
    }
    '/_auth/createAdmin': {
      id: '/_auth/createAdmin'
      path: '/createAdmin'
      fullPath: '/createAdmin'
      preLoaderRoute: typeof AuthCreateAdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth/forgotPassword': {
      id: '/_auth/forgotPassword'
      path: '/forgotPassword'
      fullPath: '/forgotPassword'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminDashboardRoute: typeof AdminDashboardRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminDashboardRoute: AdminDashboardRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AdminRouteWithChildren
  '/dashboard': typeof AdminDashboardRoute
  '/createAdmin': typeof AuthCreateAdminRoute
  '/forgotPassword': typeof AuthForgotPasswordRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AdminRouteWithChildren
  '/dashboard': typeof AdminDashboardRoute
  '/createAdmin': typeof AuthCreateAdminRoute
  '/forgotPassword': typeof AuthForgotPasswordRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_admin/dashboard': typeof AdminDashboardRoute
  '/_auth/createAdmin': typeof AuthCreateAdminRoute
  '/_auth/forgotPassword': typeof AuthForgotPasswordRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/dashboard' | '/createAdmin' | '/forgotPassword'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/dashboard' | '/createAdmin' | '/forgotPassword'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_admin/dashboard'
    | '/_auth/createAdmin'
    | '/_auth/forgotPassword'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthCreateAdminRoute: typeof AuthCreateAdminRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthCreateAdminRoute: AuthCreateAdminRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_auth/createAdmin",
        "/_auth/forgotPassword"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/dashboard"
      ]
    },
    "/_admin/dashboard": {
      "filePath": "_admin/dashboard.tsx",
      "parent": "/_admin"
    },
    "/_auth/createAdmin": {
      "filePath": "_auth/createAdmin.tsx"
    },
    "/_auth/forgotPassword": {
      "filePath": "_auth/forgotPassword.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
